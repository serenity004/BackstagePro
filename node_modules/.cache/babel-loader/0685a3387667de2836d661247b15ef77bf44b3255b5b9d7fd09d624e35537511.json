{"ast":null,"code":"import _objectSpread from\"D:/backstage-pro/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{HashRouter,Routes,Route}from'react-router-dom';import ControlPanel from'./components/ControlPanel';import DisplayScreen from'./components/DisplayScreen';import Schedule from'./components/Schedule';import SplashScreen from'./components/SplashScreen';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[showSplash,setShowSplash]=useState(true);const[isDark,setIsDark]=useState(true);const[timeData,setTimeData]=useState(null);const[events,setEvents]=useState([]);const[showSchedule,setShowSchedule]=useState(false);const handleTimeSet=data=>{console.log('Timer started with data:',data);const newTimeData=_objectSpread(_objectSpread({},data),{},{startTime:Date.now(),currentTime:data.totalSeconds});setTimeData(newTimeData);setEvents(prev=>[...prev,newTimeData]);// Use the electron bridge to send timer updates\nif(window.electron){window.electron.sendTimerUpdate(newTimeData);}};const handleAddTime=additionalSeconds=>{if(!timeData)return;const updatedTimeData=_objectSpread(_objectSpread({},timeData),{},{totalSeconds:timeData.totalSeconds+additionalSeconds,startTime:Date.now()-(timeData.totalSeconds-timeData.currentTime)*1000});setTimeData(updatedTimeData);setEvents(prev=>[...prev,updatedTimeData]);// Send update to display window\nif(window.electron){window.electron.sendTimerUpdate(updatedTimeData);}};useEffect(()=>{const timer=setTimeout(()=>setShowSplash(false),2500);return()=>clearTimeout(timer);},[]);useEffect(()=>{// Listen for timer updates from the main process\nif(window.electron){window.electron.onTimerUpdate(data=>{setTimeData(data);});return()=>{window.electron.removeListeners();};}},[]);if(showSplash){return/*#__PURE__*/_jsx(SplashScreen,{onComplete:()=>setShowSplash(false)});}const MainContent=()=>/*#__PURE__*/_jsx(\"div\",{className:isDark?'dark':'',children:showSchedule?/*#__PURE__*/_jsx(Schedule,{events:events,onBack:()=>setShowSchedule(false)}):/*#__PURE__*/_jsx(ControlPanel,{onTimeSet:handleTimeSet,onThemeToggle:()=>{setIsDark(!isDark);if(window.electron){window.electron.sendThemeChange(!isDark);}},isDark:isDark,onShowSchedule:()=>setShowSchedule(true),timeData:timeData,onAddTime:handleAddTime})});return/*#__PURE__*/_jsx(HashRouter,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(MainContent,{})}),/*#__PURE__*/_jsx(Route,{path:\"/display\",element:/*#__PURE__*/_jsx(DisplayScreen,{timeData:timeData,isDark:isDark})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","HashRouter","Routes","Route","ControlPanel","DisplayScreen","Schedule","SplashScreen","jsx","_jsx","jsxs","_jsxs","App","showSplash","setShowSplash","isDark","setIsDark","timeData","setTimeData","events","setEvents","showSchedule","setShowSchedule","handleTimeSet","data","console","log","newTimeData","_objectSpread","startTime","Date","now","currentTime","totalSeconds","prev","window","electron","sendTimerUpdate","handleAddTime","additionalSeconds","updatedTimeData","timer","setTimeout","clearTimeout","onTimerUpdate","removeListeners","onComplete","MainContent","className","children","onBack","onTimeSet","onThemeToggle","sendThemeChange","onShowSchedule","onAddTime","path","element"],"sources":["D:/backstage-pro/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { HashRouter, Routes, Route } from 'react-router-dom';\r\nimport ControlPanel from './components/ControlPanel';\r\nimport DisplayScreen from './components/DisplayScreen';\r\nimport Schedule from './components/Schedule';\r\nimport SplashScreen from './components/SplashScreen';\r\n\r\nfunction App() {\r\n  const [showSplash, setShowSplash] = useState(true);\r\n  const [isDark, setIsDark] = useState(true);\r\n  const [timeData, setTimeData] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [showSchedule, setShowSchedule] = useState(false);\r\n\r\n  const handleTimeSet = (data) => {\r\n    console.log('Timer started with data:', data);\r\n    const newTimeData = {\r\n      ...data,\r\n      startTime: Date.now(),\r\n      currentTime: data.totalSeconds\r\n    };\r\n    setTimeData(newTimeData);\r\n    setEvents(prev => [...prev, newTimeData]);\r\n    \r\n    // Use the electron bridge to send timer updates\r\n    if (window.electron) {\r\n      window.electron.sendTimerUpdate(newTimeData);\r\n    }\r\n  };\r\n\r\n  const handleAddTime = (additionalSeconds) => {\r\n    if (!timeData) return;\r\n    \r\n    const updatedTimeData = {\r\n      ...timeData,\r\n      totalSeconds: timeData.totalSeconds + additionalSeconds,\r\n      startTime: Date.now() - ((timeData.totalSeconds - timeData.currentTime) * 1000)\r\n    };\r\n    \r\n    setTimeData(updatedTimeData);\r\n    setEvents(prev => [...prev, updatedTimeData]);\r\n    \r\n    // Send update to display window\r\n    if (window.electron) {\r\n      window.electron.sendTimerUpdate(updatedTimeData);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setShowSplash(false), 2500);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Listen for timer updates from the main process\r\n    if (window.electron) {\r\n      window.electron.onTimerUpdate((data) => {\r\n        setTimeData(data);\r\n      });\r\n\r\n      return () => {\r\n        window.electron.removeListeners();\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  if (showSplash) {\r\n    return <SplashScreen onComplete={() => setShowSplash(false)} />;\r\n  }\r\n\r\n  const MainContent = () => (\r\n    <div className={isDark ? 'dark' : ''}>\r\n      {showSchedule ? (\r\n        <Schedule \r\n          events={events} \r\n          onBack={() => setShowSchedule(false)}\r\n        />\r\n      ) : (\r\n        <ControlPanel\r\n          onTimeSet={handleTimeSet}\r\n          onThemeToggle={() => {\r\n            setIsDark(!isDark);\r\n            if (window.electron) {\r\n              window.electron.sendThemeChange(!isDark);\r\n            }\r\n          }}\r\n          isDark={isDark}\r\n          onShowSchedule={() => setShowSchedule(true)}\r\n          timeData={timeData}\r\n          onAddTime={handleAddTime}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<MainContent />} />\r\n        <Route path=\"/display\" element={<DisplayScreen timeData={timeData} isDark={isDark} />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}